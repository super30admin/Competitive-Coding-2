//time complexity : O(nW)
//space complexity :O(nW)
// run successfully in GFG : Y

int knapSack(int W, int wt[], int val[], int n) 
{ 
  
     
    vector<vector<int>> temp(n+1,vector<int> (W+1)); 
  
    
    for (int i=0;i<=n;i++)  
    { 
        for (int j=0;j<=W;j++)  
        { 
            if(i==0 || j==0) 
            {
                temp[i][j]=0; 
            }
            else if (wt[i-1]>j) 
            {
                temp[i][j] = temp[i-1][j]; 
            }
            else
            {
                temp[i][j] = max(val[i-1] + temp[i-1][j-wt[i-1]], temp[i-1][j]); 
            }
                
        } 
    } 
  
    return temp[n][W]; 
} 
  
