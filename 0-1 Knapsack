// "static void main" must be defined in a public class.
public class Main {
    public static void main(String[] args) {
        int[] weight={1,2,3};
        int[] values={6,10,12};
        int maxCapacity=5;
        int result = knapsack(weight,values,maxCapacity);
        System.out.println("Max Profit: " +result);
    }
    
    public static int knapsack(int[] weight,int[] values,int maxCapacity){
        if(weight==null || maxCapacity==0) return 0;
        
        //init
        int arrSize = weight.length+1;
        int capacity =maxCapacity+1;
        int[][] dp = new int[arrSize][capacity];
        
        /*commented as the arr always starts with 0;
        // for(int i=0;i<arrSize;i++){ //col
        //     dp[i][0]= 0;
        // }
        // for(int j=0;j<capacity;j++){//row 
        //     dp[0][j]=0;
        // }
        
        for(int i=1;i<arrSize;i++){
            for(int j=1;j<capacity;j++){
                if(j<weight[i-1]){
                    dp[i][j]=dp[i-1][j];
                }
                else{
                    dp[i][j]=Math.max(dp[i-1][j],values[i-1] + dp[i-1][j-weight[i-1]]);
                }
            }
        }
        return dp[arrSize-1][capacity-1];
    }
}

//Time complexity : O(n*m)
//Space Complexity : O(n*m)
//ran successfully
//faced difficulty for creating tree but generating matrix i find the solution.
